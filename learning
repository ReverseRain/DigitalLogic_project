`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2023/12/01 15:38:29
// Design Name: 
// Module Name: learning
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module learning(
input [1:0] mode,
input clk,
input [6:0] play,
input ishigher,
input islower,
input reset,
output wire isHight,
output wire isLow,
output wire [6:0]  lights,
output wire pwm,
output [3:0] an,
output wire [6:0] led_light,
output reg match,
output wire isEnd
//output reg [6:0]  last_lights,
//output wire [31:0] index
    );
    `include "parameter_project.v"
    //no sound?
    reg tv_count=0;
//    reg isEnd;
    reg [6:0]last_play;
    reg [31:0] last_index=0;
//    reg match;
    wire[31:0]index;
    Automusic auto1(.clk(clk),.present_song(mode),.isLow(isLow),.isAuto(false),
        .isHight(isHight),.lights(lights),.an(an),.isMatch(match)
        ,.led_light(led_light),.index(index),.reset(reset),.isEnd(isEnd));
    music music(.ishigher(ishigher),.islower(islower),.clk(clk),.notes(play),.pwm(pwm));
    
    
    always@(index,play)begin
    if(last_index!=index) begin
    last_index=index;
    match=1'b0;
    end
    else if(play==lights&&isHight==ishigher&&isLow==islower)
    match=1'b1;
    end


      

endmodule
